// Generated by dojo-bindgen on Thu, 26 Sep 2024 03:06:36 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;
using System.Reflection;
using System.Linq;
using System.Collections.Generic;
using Enum = Dojo.Starknet.Enum;

// Fix to use Records in Unity ref. https://stackoverflow.com/a/73100830
using System.ComponentModel;

namespace System.Runtime.CompilerServices
{
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal class IsExternalInit { }
}




// Type definition for `core::option::Option::<core::integer::u32>` enum
public abstract record Option<A>() : Enum {
    public record Some(A value) : Option<A>;
    public record None() : Option<A>;
}

// Type definition for `dojo_starter::models::Direction` enum
public abstract record Direction() : Enum {
    public record None() : Direction;
    public record Left() : Direction;
    public record Right() : Direction;
    public record Up() : Direction;
    public record Down() : Direction;
}


namespace dojo_starter {
    // Model definition for `dojo_starter::systems::actions::actions::Moved` model
    public class Moved : ModelInstance {
        [ModelField("player")]
        public FieldElement player;

        [ModelField("direction")]
        public Direction direction;

        // Start is called before the first frame update
        void Start() {
        }
    
        // Update is called once per frame
        void Update() {
        }
    }
}

        